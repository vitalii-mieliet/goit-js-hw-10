{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import { iziToast, flatpickr, confirmDatePlugin } from './libs';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\nconst timer = document.querySelector('.js-timer');\nconst daysEl = timer.querySelector('[data-days]');\nconst hoursEl = timer.querySelector('[data-hours]');\nconst minutesEl = timer.querySelector('[data-minutes]');\nconst secondsEl = timer.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nstartBtn.setAttribute('disabled', '');\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  plugins: [confirmDatePlugin({})],\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n      if (!startBtn.hasAttribute('disabled')) {\n        startBtn.setAttribute('disabled', '');\n      }\n      return;\n    }\n    userSelectedDate = selectedDates[0];\n    startBtn.removeAttribute('disabled');\n  },\n});\n\nstartBtn.addEventListener('click', countdownTimer);\n\nfunction countdownTimer() {\n  startBtn.setAttribute('disabled', '');\n  dateInput.setAttribute('disabled', '');\n  const intervalId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    hoursEl.textContent = addZero(hours);\n    minutesEl.textContent = addZero(minutes);\n    secondsEl.textContent = addZero(seconds);\n    if (diff < 1000) {\n      clearInterval(intervalId);\n      // startBtn.removeAttribute('disabled');\n      dateInput.removeAttribute('disabled');\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","dateInput","timer","hoursEl","minutesEl","secondsEl","userSelectedDate","flatpickr","confirmDatePlugin","selectedDates","iziToast","countdownTimer","intervalId","diff","hours","minutes","seconds","convertMs","addZero","ms","days","value"],"mappings":"sJAEA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAQ,SAAS,cAAc,WAAW,EACjCA,EAAM,cAAc,aAAa,EAChD,MAAMC,EAAUD,EAAM,cAAc,cAAc,EAC5CE,EAAYF,EAAM,cAAc,gBAAgB,EAChDG,EAAYH,EAAM,cAAc,gBAAgB,EAEtD,IAAII,EAAmB,KACvBN,EAAS,aAAa,WAAY,EAAE,EAEpCO,EAAUN,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAS,CAACO,EAAkB,CAAA,CAAE,CAAC,EAC/B,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,IAAI,KAAQ,CACjCC,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACjB,CAAO,EACIV,EAAS,aAAa,UAAU,GACnCA,EAAS,aAAa,WAAY,EAAE,EAEtC,MACN,CACIM,EAAmBG,EAAc,CAAC,EAClCT,EAAS,gBAAgB,UAAU,CACpC,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAASW,CAAc,EAEjD,SAASA,GAAiB,CACxBX,EAAS,aAAa,WAAY,EAAE,EACpCC,EAAU,aAAa,WAAY,EAAE,EACrC,MAAMW,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOP,EAAmB,KAAK,IAAK,EACpC,CAAQ,MAAAQ,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKC,EAAUJ,CAAI,EACxDV,EAAQ,YAAce,EAAQJ,CAAK,EACnCV,EAAU,YAAcc,EAAQH,CAAO,EACvCV,EAAU,YAAca,EAAQF,CAAO,EACnCH,EAAO,MACT,cAAcD,CAAU,EAExBX,EAAU,gBAAgB,UAAU,EAEvC,EAAE,GAAI,CACT,CAEA,SAASgB,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAN,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASE,EAAQG,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}